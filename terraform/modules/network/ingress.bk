resource "kubernetes_manifest" "istio-kubernetes-gateway" {
  provider = kubernetes-alpha
  manifest = {
    "apiVersion" = "networking.istio.io/v1beta1"
    "kind"       = "Gateway"
    "metadata" = {
      "name"      = "kubernetes"
      "namespace" = "default"
    }
    "spec" = {
      "selector" = {
        "istio" = "ingressgateway"
      }
      "servers" = [
        {
          "hosts" = [
            "kubernetes.${var.base_domain}",
          ]
          "port" = {
            "name"     = "http"
            "number"   = 443
            "protocol" = "HTTPS"
          }
          "tls" = {
            "mode" = "PASSTHROUGH"
          }
        }
      ]
    }
  }
}

resource "kubernetes_manifest" "istio-catchall-gateway" {
  provider = kubernetes-alpha
  manifest = {
    "apiVersion" = "networking.istio.io/v1beta1"
    "kind"       = "Gateway"
    "metadata" = {
      "name"      = "catchall"
      "namespace" = "istio-system"
    }
    "spec" = {
      "selector" = {
        "istio" = "ingressgateway"
      }
      "servers" = [
        {
          "hosts" = [
            "*.${var.base_domain}",
          ]
          "port" = {
            "name"     = "https"
            "number"   = 443
            "protocol" = "HTTPS"
          }
          "tls" = {
            "mode"           = "SIMPLE"
            "credentialName" = "secureweb-tls"
          }
        },
        {
          "hosts" = [
            "*.${var.base_domain}",
          ]
          "port" = {
            "name"     = "http"
            "number"   = 80
            "protocol" = "HTTP"
          }
        },
      ]
    }
  }
}

resource "kubernetes_manifest" "istio-kubernetes-virtualservice" {
  provider = kubernetes-alpha
  manifest = {
    "kind" = "VirtualService"
    "metadata" = {
      "name"      = "kubernetes"
      "namespace" = "default"
    }
    "apiVersion" = "networking.istio.io/v1beta1"
    "spec" = {
      "gateways" = [
        "kubernetes",
      ]
      "hosts" = [
        "kubernetes.${var.base_domain}",
      ]
      "tls" = [
        {
          "match" = [
            {
              "port" = 443
              "sniHosts" = [
                "kubernetes.${var.base_domain}",
              ]
            },
          ]
          "route" = [
            {
              "destination" = {
                "host" = "kubernetes"
                "port" = {
                  "number" = 443
                }
              }
            },
          ]
        },
      ]
    }
  }
}

resource "kubernetes_manifest" "virtualservice-list" {
  for_each = { for record in var.ingress : record.name => record }
  provider = kubernetes-alpha
  manifest = {
    "kind" = "VirtualService"
    "metadata" = {
      "name"      = each.value.name
      "namespace" = "istio-system"
    }
    "apiVersion" = "networking.istio.io/v1beta1"
    "spec" = {
      "gateways" = [
        "catchall",
      ]
      "hosts" = [
        "${each.value.name}.${var.base_domain}",
      ]
      "http" = [
        {
          "route" = [
            {
              "destination" = {
                "host" = "${each.value.service}.${each.value.namespace}.svc.cluster.local"
                "port" = {
                  "number" = each.value.port
                }
              }
            },
          ]
        },
      ]
    }
  }
}


resource "kubernetes_secret" "cloudflare_api" {
  metadata {
    name      = "cloudflare-secret"
    namespace = "istio-system"
  }
  data = {
    "api-token" = var.cloudflare_apitoken
  }
}

resource "kubernetes_manifest" "cert_issuer" {
  provider = kubernetes-alpha
  manifest = {
    "apiVersion" = "cert-manager.io/v1"
    "kind"       = "Issuer"
    "metadata" = {
      "name"      = "letsencrypt-prod"
      "namespace" = "istio-system"
    }
    "spec" = {
      "acme" = {
        "email" = "letsencrypt@secureweb.com"
        "privateKeySecretRef" = {
          "name" = "letsencrypt-prod"
        }
        "server" = "https://acme-v02.api.letsencrypt.org/directory"
        "solvers" = [
          {
            "dns01" = {
              "cloudflare" = {
                "apiTokenSecretRef" = {
                  "key"  = "api-token"
                  "name" = "cloudflare-secret"
                }
                "email" = "allan@secureweb.ltd"
              }
            }
          }
        ]
      }
    }
  }
}

resource "kubernetes_manifest" "cert_cert" {
  provider = kubernetes-alpha
  manifest = {
    "apiVersion" = "cert-manager.io/v1"
    "kind"       = "Certificate"
    "metadata" = {
      "name"      = "secureweb-tls"
      "namespace" = "istio-system"
    }
    "spec" = {
      "dnsNames" = [
        "secureweb.ltd",
        "*.secureweb.ltd"
      ]
      "issuerRef" = {
        "kind" = "Issuer"
        "name" = "letsencrypt-prod"
      }
      "secretName" = "secureweb-tls"
    }
  }
}
